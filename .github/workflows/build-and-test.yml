name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up .NET environment
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # Step 3: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Step 4: Build and test the backend
      - name: Build the project
        run: dotnet build --no-restore

      - name: Run backend tests and collect coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" --logger:"junit;MethodFormat=Class;FailureBodyFormat=Verbose"

      # Step 5: Install ReportGenerator and generate report
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      # Step 6: Install Node.js (for running Newman)
      - name: Set up Node.js for Newman
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 7: Install Newman globally
      - name: Install Newman
        run: npm install -g newman

      # Step 8: Run Postman tests using Newman
      - name: Run Postman collection tests for backend
        run: newman run /path/to/your/postman/backend-collection.json -e /path/to/your/postman/backend-environment.json

  frontend:
    runs-on: ubuntu-latest
    needs: backend  # This ensures the backend job completes before the frontend job starts
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment for frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Specify the Node version based on your project's needs

      # Additional frontend setup and testing steps (if needed)
